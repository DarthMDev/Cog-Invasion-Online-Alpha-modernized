"""

  Filename: tool_MD5.py
  Created by: DuckyDuck1553 (11Apr15)

"""

import hashlib
import time

FILE_LIST = [
    "libcoginvasion.pyd",
    "coginvasion.exe",
    "icon.ico",
    "toonmono.cur",
    "config/config_client.prc",
    "release_notes.txt",
    "phase_0.mf",
    "phase_3.mf",
    "phase_3.5.mf",
    "phase_4.mf",
    "phase_5.mf",
    "phase_5.5.mf",
    "phase_6.mf",
    "phase_7.mf",
    "phase_8.mf",
    "phase_9.mf",
    "phase_10.mf",
    "phase_11.mf",
    "phase_12.mf",
    "phase_13.mf",
    "panda3d/ai.pyd",
    "panda3d/bullet.pyd",
    "panda3d/core.pyd",
    "panda3d/direct.pyd",
    "panda3d/dtoolconfig.pyd",
    "panda3d/egg.pyd",
    "panda3d/fx.pyd",
    "panda3d/ode.pyd",
    "panda3d/physics.pyd",
    "panda3d/rocket.pyd",
    "panda3d/skel.pyd",
    "panda3d/vision.pyd",
    "panda3d/vrpn.pyd",
    "libp3direct.dll",
    "libp3dtool.dll",
    "libp3dtoolconfig.dll",
    "libp3ffmpeg.dll",
    "libp3miles_audio.dll",
    "mss32.dll",
    "mssmp3.asi",
    "libp3framework.dll",
    "libp3ptloader.dll",
    "libp3rocket.dll",
    "libp3vision.dll",
    "libp3vrpn.dll",
    "libp3windisplay.dll",
    "libpanda.dll",
    "libpandaai.dll",
    "libpandabullet.dll",
    "libpandaegg.dll",
    "libpandaexpress.dll",
    "libpandafx.dll",
    "libpandagl.dll",
    "libpandaode.dll",
    "libpandaphysics.dll",
    "libpandaskel.dll"
]

monthNum2monthAbr = {
    '01': 'Jan',
    '02': 'Feb',
    '03': 'Mar',
    '04': 'Apr',
    '05': 'May',
    '06': 'Jun',
    '07': 'Jul',
    '08': 'Aug',
    '09': 'Sep',
    '10': 'Oct',
    '11': 'Nov',
    '12': 'Dec'
}

date = time.strftime("%d-%m-%Y")
day, monthNum, year = date.split('-')
month = monthNum2monthAbr[monthNum]
dateStr = "({0}{1}{2})".format(day, month, year[-2:])

print dateStr

HEADING = """
// This file was automatically generated by tool_MD5.py
// Created on: {0}

""".format(dateStr)

info_file = open("file_info.txt", "w+")
info_file.write(HEADING)
info_file.flush()

for fileName in FILE_LIST:
    md5 = hashlib.md5(open(fileName).read()).hexdigest()
    what2PutInFile = fileName + " " + str(md5)
    print what2PutInFile
    info_file.write(what2PutInFile + "\n")
    info_file.flush()

info_file.close()
del info_file
